{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robot","map","user","SearchBox","props","type","placeholder","onChange","changefunction","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onChangeFunction","event","searchField","target","value","robots","fetch","then","response","json","filterRobot","filter","robo","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAgBeA,EAdF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,MACrB,OACF,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACpB,gCACC,6BAAKC,IACL,4BAAIC,WCgBMI,EArBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,MAEnB,OACE,8BAEGA,EAAMC,KAAI,SAAAC,GACT,OACC,cAAC,EAAD,CAEAT,GAAIS,EAAKT,GACTC,KAAMQ,EAAKR,KACXC,MAAOO,EAAKP,OAHNO,EAAKT,UCDHU,EARG,SAACC,GACf,OACE,uBAAOR,UAAU,oCAAoCS,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,EAAMI,kBCOtGC,G,MATA,SAACL,GAChB,OACC,qBAAKM,MAAO,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACGT,EAAMU,aCoBKC,E,kDAtBd,WAAYX,GAAO,IAAD,8BACjB,cAAMA,IACDY,MAAM,CACVC,UAAS,GAHO,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAGzB,WACC,OAAGG,KAAKJ,MAAMC,SACN,iEAGAG,KAAKhB,MAAMU,a,GAjBOQ,aCmDbC,E,kDA3Cb,aAAc,IAAD,8BACX,gBAQJC,iBAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SARtC,EAAKZ,MAAQ,CACba,OAAS,GACTH,YAAa,IAJF,E,qDAaf,WAAoB,IAAD,OAChBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAA7B,GAAI,OAAE,EAAKmB,SAAS,CAACQ,OAAO3B,S,oBAInC,WACC,MAA8BkB,KAAKJ,MAA5Ba,EAAP,EAAOA,OAAQH,EAAf,EAAeA,YACTQ,EAAcL,EAAOM,QAAO,SAAAC,GACnC,OAAOA,EAAK1C,KAAK2C,cAAcC,SAASZ,EAAYW,kBAEnD,OAAQR,EAAOU,OAGf,sBAAK3C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,eAAgBY,KAAKI,mBAChC,cAAC,EAAD,UACE,cAAC,EAAD,UACA,cAAC,EAAD,CAAUxB,MAAOkC,WAPnB,6C,GA3BeZ,aCGJkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bdf37d22.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, name, email}) =>{\r\n    return(\r\n  <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n   <img alt='photos' src={`https://robohash.org/${id}?size=200x200`}/>\r\n    <div>\r\n     <h2>{name}</h2>\r\n     <p>{email}</p>\r\n    </div>\r\n   </div>\r\n \t);\r\n\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robot}) =>{\r\n\t\r\nreturn (\r\n  <div>\r\n    {\r\n    \trobot.map(user=> {\r\n    \t\treturn (\r\n    \t\t <Card\r\n    \t\t\tkey= {user.id} \r\n    \t\t\tid={user.id}\r\n    \t\t\tname={user.name} \r\n    \t\t\temail={user.email}\r\n    \t\t\t/>\r\n    \t\t\t  );\r\n    \t}\r\n    \t)\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = (props) =>{\r\n    return (\r\n    \t\t<input className='bg-light-blue b--green pa3 ba ma2' type='search' placeholder='Search Robots' onChange={props.changefunction}/>\r\n    \t)\r\n\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\nreturn(\r\n\t<div style={{overflowY:'scroll', border: '5px solid black', height: '450px'}}>\r\n\t  {props.children}\r\n\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\thasError:false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({hasError:true});\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Opps! There is something wrong </h1>;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.props.children;\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\n\r\n\r\n class App extends Component {\r\n \tconstructor(){\r\n \t\t\tsuper();\r\n \t\t\tthis.state = {\r\n\t\t\t\trobots : [],\r\n\t\t\t\tsearchField: ''\r\n\t\t\t\t};\r\n \t}\r\n\r\n\r\nonChangeFunction=(event)=>{\t\r\n\tthis.setState({searchField: event.target.value});\r\n}\r\n\r\ncomponentDidMount(){\r\n   fetch('https://jsonplaceholder.typicode.com/users')\r\n   .then(response=>response.json())\r\n   .then(user=>this.setState({robots:user}));\r\n\r\n}\r\n\r\n \trender(){\r\n \t\tconst {robots, searchField} = this.state;\r\n \t\tconst filterRobot = robots.filter(robo => {\r\n\t\treturn robo.name.toLowerCase().includes(searchField.toLowerCase());\r\n           });\r\n \t\treturn !robots.length?\r\n \t\t\t<h1>Loading</h1>:\r\n \t\t\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>Robofriends</h1>\r\n\t\t\t\t<SearchBox changefunction={this.onChangeFunction}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t  <ErrorBoundary>\r\n\t\t\t\t\t\t<CardList robot={filterRobot} />\r\n\t\t\t\t  </ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n    \t\t);\r\n\t\t}\r\n  \r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}